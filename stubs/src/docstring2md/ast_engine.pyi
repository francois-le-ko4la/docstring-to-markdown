import ast
from typing import NamedTuple, Union

class NodeLink(NamedTuple):
    level: int
    parent: Union[ast.FunctionDef, ast.ClassDef, ast.Module]

class ObjVisitor(ast.NodeVisitor):
    def __init__(self, module_docstring: bool = ..., priv: bool = ...) -> None: ...
    @property
    def toc(self) -> str: ...
    @property
    def output(self) -> str: ...
    @staticmethod
    def get_tree(source: str) -> ast.AST: ...
    def visit_Module(self, node: ast.Module) -> None: ...
    def visit_ClassDef(self, node: ast.ClassDef) -> None: ...
    def visit_FunctionDef(self, node: ast.FunctionDef) -> None: ...
